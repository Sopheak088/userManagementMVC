@model iThinking.ViewModel.Identity.EditUserViewModel
@using iThinking.UserCenter.Identity

@{
    ViewBag.Title = "Edit user";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @ViewBag.Title
        <small>User/Edit</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">User management</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-default">
                <div class="box-header">
                    <div class="col-md-8">
                        <h3 class="box-title">User information</h3>
                    </div>
                    <div class="col-md-4">
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @readonly = true })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.IsCanLogin, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.CheckBoxFor(m => m.IsCanLogin, new { })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-2 control-label">
                                Select User Group
                            </label>
                            <div class="col-md-10">
                                @foreach (var project in ((List<ApplicationGroup>)ViewBag.Groups).GroupBy(a => a.ApplicationProjectId).Select(m => m.First()).ToList())
                                {
                                    <div class="panel panel-default">
                                        <div class="panel-heading">@project.ApplicationProject.Name</div>
                                        <div class="panel-body">

                                            @foreach (var item in ((List<ApplicationGroup>)ViewBag.Groups).Where(m => m.ApplicationProjectId == project.ApplicationProjectId).OrderBy(m => m.Name).ToList())
                                            {
                                                <div class="col-sm-4">
                                                    <input type="checkbox" name="selectedGroups" value="@item.Id" checked="@(ViewBag.SelectedGroups != null && ViewBag.SelectedGroups.Contains(item.Id) ? true : false)"> @item.Name
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Edit" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    }
                    <br />
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->